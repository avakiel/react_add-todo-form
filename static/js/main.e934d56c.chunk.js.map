{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","completed","title","classNames","TodoList","todos","map","username","userId","App","todosWithUsers","todosFromServer","usersFromServer","userFromServer","indexOf","useState","todoList","setTodoList","setTitle","select","setSelect","touch","setTouch","touchUserSelect","setTouchUserSelect","action","method","onSubmit","event","preventDefault","newTodoUser","newTodo","Math","max","post","Number","prev","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e934d56c.chunk.js","sourcesContent":["import { UserProps } from '../types';\n\nexport const UserInfo: React.FC<UserProps> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { ToDoWithUserProps } from '../types';\n\nexport const TodoInfo: React.FC<ToDoWithUserProps> = (\n  { todo },\n) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { ToDosWithUserProps } from '../types';\n\nexport const TodoList: React.FC<ToDosWithUserProps> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n        data-id={todo.id}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { ToDoWithUser } from './components/types';\n\nexport const App = () => {\n  const todosWithUsers = todosFromServer.map(todo => {\n    const user = usersFromServer[usersFromServer\n      .map(userFromServer => userFromServer.id)\n      .indexOf(todo.userId)];\n\n    return { ...todo, user };\n  });\n\n  const [todoList, setTodoList] = useState<ToDoWithUser[]>(todosWithUsers);\n  const [title, setTitle] = useState<string>('');\n  const [select, setSelect] = useState('');\n  const [touch, setTouch] = useState(false);\n  const [touchUserSelect, setTouchUserSelect] = useState(false);\n\n  function addTodo(event: React.FormEvent) {\n    event.preventDefault();\n\n    setTouch(true);\n    setTouchUserSelect(true);\n\n    if (title && select) {\n      const newTodoUser = usersFromServer[usersFromServer\n        .map(user => user.name).indexOf(select)];\n\n      const newTodo = {\n        id: Math.max(...todoList.map(post => Number(post.id))) + 1,\n        title,\n        completed: false,\n        userId: newTodoUser.id,\n        user: newTodoUser,\n      };\n\n      setTodoList(prev => ([...prev, newTodo]));\n\n      setTitle('');\n      setSelect('');\n      setTouch(false);\n      setTouchUserSelect(false);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={addTodo}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTouch(false);\n            }}\n          />\n          {(!title && touch)\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={select}\n            onChange={(event) => setSelect(event.target.value)}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.name}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {(!select && touchUserSelect)\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { StrictMode } from 'react';\nimport { App } from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}