{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","completed","title","TodoList","todos","map","username","userId","App","todosWithUsers","todosFromServer","usersFromServer","us","indexOf","useState","todoList","setTodoList","setTitle","select","setSelect","tochTitle","setTochTitle","tochUserSelect","setTochUserSelect","action","method","onSubmit","event","preventDefault","newTodoUser","newTodo","Math","max","post","Number","prev","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89455104.chunk.js","sourcesContent":["import { UserProps } from '../types';\n\nexport const UserInfo: React.FC<UserProps> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import { UserInfo } from '../UserInfo/UserInfo';\nimport { ToDoWithUserProps } from '../types';\n\nexport const TodoInfo: React.FC<ToDoWithUserProps> = (\n  { todo },\n) => {\n  return (\n    <div>\n      <article data-id={todo.id} className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : null}`}>\n        <h2 className=\"TodoInfo__title\">\n          {todo.title}\n        </h2>\n\n        {todo.user && <UserInfo user={todo.user} />}\n      </article>\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport { TodoInfo } from '../TodoInfo';\nimport { ToDosWithUserProps } from '../types';\n\nexport const TodoList: React.FC<ToDosWithUserProps> = ({ todos }) => {\n  return (\n    <div>\n      <section className=\"TodoList\">\n        {todos.map(todo => <TodoInfo key={todo.id} todo={todo} data-id={todo.id} />)}\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","/* eslint-disable object-shorthand */\n/* eslint-disable no-console */\nimport { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { ToDoWithUser } from './components/types';\n\nexport const App = () => {\n  const todosWithUsers = todosFromServer.map(todo => {\n    const user = usersFromServer[usersFromServer\n      .map(us => us.id).indexOf(todo.userId)];\n\n    return { ...todo, user };\n  });\n\n  const [todoList, setTodoList] = useState<ToDoWithUser[]>(todosWithUsers);\n  const [title, setTitle] = useState<string>('');\n  const [select, setSelect] = useState('');\n  const [tochTitle, setTochTitle] = useState(false);\n  const [tochUserSelect, setTochUserSelect] = useState(false);\n\n  function addTodo(event: React.FormEvent) {\n    event.preventDefault();\n\n    setTochTitle(true);\n    setTochUserSelect(true);\n\n    if (title && select) {\n      const newTodoUser = usersFromServer[usersFromServer\n        .map(user => user.name).indexOf(select)];\n\n      const newTodo = {\n        id: Math.max(...todoList.map(post => Number(post.id))) + 1,\n        title: title,\n        completed: false,\n        userId: newTodoUser.id,\n        user: newTodoUser,\n      };\n\n      setTodoList(prev => ([...prev, newTodo]));\n\n      setTitle('');\n      setSelect('');\n      setTochTitle(false);\n      setTochUserSelect(false);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={addTodo}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTochTitle(false);\n            }}\n          />\n          {(!title && tochTitle)\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={select}\n            onChange={(event) => setSelect(event.target.value)}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.name}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {(!select && tochUserSelect)\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { StrictMode } from 'react';\nimport { App } from './App';\n\nReactDOM.render(\n\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}